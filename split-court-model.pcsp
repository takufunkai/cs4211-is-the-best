enum{nd_ad_ct, nd_de_ct, dm_ad_ct, dm_de_ct}; //serve position: ad court or deuce court
enum{player1, player2, na};

var turn = na; //serve turn;
var ndscore = 0;
var dmscore = 0;
var won = na;
var ball = 9;
var points = 7;
#define p0 54;
#define p1 4;
#define p2 46;
#define p3 10;
#define p4 67;
#define p5 4;
#define p6 23;
#define p7 31;
#define p8 1;
#define p9 8;
#define p10 40;
#define p11 6;
#define p12 46;
#define p13 9;
#define p14 57;
#define p15 23;
#define p16 16;
#define p17 12;
#define p18 0;
#define p19 6;
#define p20 1;
#define p21 11;
#define p22 1;
#define p23 4;
#define p24 9;
#define p25 35;
#define p26 1;
#define p27 24;
#define p28 4;
#define p29 6;
#define p30 0;
#define p31 0;
#define p32 1;
#define p33 1;
#define p34 6;
#define p35 26;
#define p36 0;
#define p37 8;
#define p38 1;
#define p39 2;
#define p40 1;
#define p41 1;
#define p42 1;
#define p43 3;
#define p44 6;
#define p45 30;
#define p46 0;
#define p47 11;
#define p48 11;
#define p49 25;
#define p50 0;
#define p51 2;
#define p52 3;
#define p53 23;
#define p54 0;
#define p55 15;
#define p56 121;
#define p57 0;
#define p58 75;
#define p59 0;
#define p60 78;
#define p61 0;
#define p62 0;
#define p63 0;
#define p64 0;
#define p65 0;
#define p66 0;
#define p67 0;
#define p68 16;
#define p69 51;
#define p70 117;
#define p71 0;
#define p72 104;
#define p73 0;
#define p74 54;
#define p75 0;
#define p76 48;
#define p77 0;
#define p78 76;
#define p79 0;
#define p80 90;
#define p81 0;
#define p82 41;
#define p83 45;
#define p84 21;
#define p85 0;
#define p86 8;
#define p87 0;
#define p88 6;
#define p89 0;
#define p90 196;
#define p91 0;
#define p92 75;
#define p93 0;
#define p94 162;
#define p95 0;
#define p96 29;
#define p97 58;
#define p98 30;
#define p99 4;
#define p100 50;
#define p101 18;
#define p102 67;
#define p103 9;
#define p104 23;
#define p105 26;
#define p106 4;
#define p107 5;
#define p108 40;
#define p109 4;
#define p110 33;
#define p111 15;
#define p112 66;
#define p113 7;
#define p114 12;
#define p115 36;
#define p116 1;
#define p117 10;
#define p118 5;
#define p119 16;
#define p120 0;
#define p121 4;
#define p122 9;
#define p123 28;
#define p124 1;
#define p125 17;
#define p126 3;
#define p127 13;
#define p128 0;
#define p129 1;
#define p130 1;
#define p131 4;
#define p132 8;
#define p133 32;
#define p134 0;
#define p135 12;
#define p136 0;
#define p137 3;
#define p138 0;
#define p139 4;
#define p140 1;
#define p141 6;
#define p142 18;
#define p143 33;
#define p144 1;
#define p145 16;
#define p146 8;
#define p147 15;
#define p148 1;
#define p149 3;
#define p150 8;
#define p151 27;
#define p152 2;
#define p153 5;
#define p154 133;
#define p155 0;
#define p156 52;
#define p157 0;
#define p158 108;
#define p159 0;
#define p160 0;
#define p161 0;
#define p162 0;
#define p163 0;
#define p164 0;
#define p165 0;
#define p166 20;
#define p167 63;
#define p168 85;
#define p169 0;
#define p170 77;
#define p171 0;
#define p172 61;
#define p173 0;
#define p174 41;
#define p175 0;
#define p176 116;
#define p177 0;
#define p178 80;
#define p179 0;
#define p180 35;
#define p181 34;
#define p182 6;
#define p183 0;
#define p184 7;
#define p185 0;
#define p186 2;
#define p187 0;
#define p188 246;
#define p189 0;
#define p190 45;
#define p191 0;
#define p192 161;
#define p193 0;
#define p194 17;
#define p195 57;

TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{nd_de_ct,dm_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == nd_de_ct ]NovakReady_DeCt -> De_Ply1Serve [] [won == na && turn == nd_ad_ct] NovakReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == dm_de_ct]DaniilReady_DeCt -> De_Ply2Serve [] [ won == na && turn == dm_ad_ct] DaniilReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);

// player 1 serving from 1, will always serve to 8 or 9
De_Ply1Serve = pcase {                             
			p0: ServeT_in{ball=8} -> Ply2_BackHandR  
			p1: ServeBody_in{ball=9} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p2: ServeWide_in{ball=9} -> Ply2_ForeHandR 
			p3: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p4: Serve_err{ball=13} -> De_Ply1Serve_2nd}; 

De_Ply1Serve_2nd = pcase {                 //1st serve is out
			p5: ServeT_in{ball=8} -> Ply2_BackHandR  
			p6: ServeBody_in{ball=9} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p7: ServeWide_in{ball=9} -> Ply2_ForeHandR 
			p8: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p9: Serve_err{ball=13} -> Fdoublefault{dmscore++; if (dmscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };

// player 1 serving from 3, will always serve to 7 or 8
Ad_Ply1Serve = pcase {
			p10: ServeT_in{ball=8} -> Ply2_ForeHandR  
			p11: ServeBody_in{ball=7} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p12: ServeWide_in{ball=7} -> Ply2_BackHandR
			p13: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p14: Serve_err{ball=13} -> Ad_Ply1Serve_2nd}; 

Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
			p15: ServeT_in{ball=8} -> Ply2_ForeHandR  
			p16: ServeBody_in{ball=7} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p17: ServeWide_in{ball=7} -> Ply2_BackHandR
			p18: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p19: Serve_err{ball=13} -> Fdoublefault{dmscore++; if (dmscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };    
     		 
Ply1_ForeHandR = ifa (turn == dm_de_ct) {    // Player 1 forehand return to Player 2's serve from the deuce court side
		 pcase {
			p20: FH_CrossCourt_Shallow{ball=9} -> Ply2_de_stroke
			p21: FH_CrossCourt_Deep{ball=12} -> Ply2_de_stroke
			p22: FH_DownLine_Shallow{ball=7} -> Ply2_ad_stroke
			p23: FH_DownLine_Deep{ball=10} -> Ply2_ad_stroke
			p24: FH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p25: FH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p26: FH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p27: FH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {  // Player 1 forehand return to Player 2's serve from the ad court side
      		pcase {
			p28: FH_InsideOut_Shallow{ball=7} -> Ply2_ad_stroke
			p29: FH_InsideOut_Deep{ball=10} -> Ply2_ad_stroke
			p30: FH_InsideIn_Shallow{ball=9} -> Ply2_de_stroke
			p31: FH_InsideIn_Deep{ball=12} -> Ply2_de_stroke
			p32: FH_CrossCourt_Shallow{ball=9} -> Ply2_de_stroke
			p33: FH_CrossCourt_Deep{ball=12} -> Ply2_de_stroke
			p34: FH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p35: FH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p36: FH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p37: FH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

Ply1_BackHandR = ifa (turn == dm_de_ct) {    // Player 1 backhand return to Player 2's serve from the deuce court side
		 pcase {
			p38: BH_CrossCourt_Shallow{ball=7} -> Ply2_ad_stroke
			p39: BH_CrossCourt_Deep{ball=10} -> Ply2_ad_stroke
			p40: BH_InsideIn_Shallow{ball=7} -> Ply2_ad_stroke
			p41: BH_InsideIn_Deep{ball=10} -> Ply2_ad_stroke
			p42: BH_InsideOut_Shallow{ball=9} -> Ply2_de_stroke
			p43: BH_InsideOut_Deep{ball=12} -> Ply2_de_stroke
			p44: BH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p45: BH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p46: BH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p47: BH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {     // Player 1 backhand return to Player 2's serve from the ad court side
      		pcase {
			p48: BH_CrossCourt_Shallow{ball=7} -> Ply2_ad_stroke
			p49: BH_CrossCourt_Deep{ball=10} -> Ply2_ad_stroke
			p50: BH_DownLine_Shallow{ball=9} -> Ply2_de_stroke
			p51: BH_DownLine_Deep{ball=12} -> Ply2_de_stroke
			p52: BH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p53: BH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p54: BH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p55: BH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
			p56: FH_Crosscourt_Shallow{ball=9} -> Ply2_de_stroke
			p57: FH_Crosscourt_Deep{ball=12} -> Ply2_de_stroke
			p58: FH_Downline_Shallow{ball=7} -> Ply2_ad_stroke
			p59: FH_Downline_Deep{ball=10} -> Ply2_ad_stroke
			p60: FH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p61: FH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p62: BH_InsideIn_Shallow{ball=7} -> Ply2_ad_stroke
			p63: BH_InsideIn_Deep{ball=10} -> Ply2_ad_stroke
			p64: BH_InsideOut_Shallow{ball=9} -> Ply2_de_stroke
			p65: BH_InsideOut_Deep{ball=12} -> Ply2_de_stroke
			p66: BH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p67: BH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p68: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p69: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};
	
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
			p70: FH_InsideOut_Shallow{ball=7} -> Ply2_ad_stroke
			p71: FH_InsideOut_Deep{ball=10} -> Ply2_ad_stroke
			p72: FH_Crosscourt_Shallow{ball=9} -> Ply2_de_stroke
			p73: FH_Crosscourt_Deep{ball=12} -> Ply2_de_stroke
			p74: FH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p75: FH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p76: BH_InsideOut_Shallow{ball=9} -> Ply2_de_stroke
			p77: BH_InsideOut_Deep{ball=12} -> Ply2_de_stroke
			p78: BH_Crosscourt_Shallow{ball=7} -> Ply2_ad_stroke
			p79: BH_Crosscourt_Deep{ball=10} -> Ply2_ad_stroke
			p80: BH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p81: BH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p82: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p83: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};


// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
			p84: FH_InsideOut_Shallow{ball=7} -> Ply2_ad_stroke
			p85: FH_InsideOut_Deep{ball=10} -> Ply2_ad_stroke
			p86: FH_InsideIn_Shallow{ball=9} -> Ply2_de_stroke
			p87: FH_InsideIn_Deep{ball=12} -> Ply2_de_stroke
			p88: FH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p89: FH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p90: BH_Crosscourt_Shallow{ball=7} -> Ply2_ad_stroke
			p91: BH_Crosscourt_Deep{ball=10} -> Ply2_ad_stroke
			p92: BH_Downline_Shallow{ball=9} -> Ply2_de_stroke
			p93: BH_Downline_Deep{ball=12} -> Ply2_de_stroke
			p94: BH_DownMid_Shallow{ball=8} -> Ply2_mid_stroke
			p95: BH_DownMid_Deep{ball=11} -> Ply2_mid_stroke
			p96: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p97: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};

// player 2 serving from 12, will always serve to 4 or 5
De_Ply2Serve = pcase {
			p98: ServeT_in{ball=5} -> Ply1_BackHandR
			p99: ServeBody_in{ball=4} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p100: ServeWide_in{ball=4} -> Ply1_ForeHandR
			p101: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p102: Serve_err{ball=13} -> De_Ply2Serve_2nd}; 

De_Ply2Serve_2nd = pcase {                 //1st serve is out
			p103: ServeT_in{ball=5} -> Ply1_BackHandR
			p104: ServeBody_in{ball=4} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p105: ServeWide_in{ball=4} -> Ply1_ForeHandR
			p106: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p107: Serve_err{ball=13} -> Ndoublefault{ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
// player 2 serving from 10, will always serve to 5 or 6
Ad_Ply2Serve = pcase {
			p108: ServeT_in{ball=5} -> Ply1_ForeHandR
			p109: ServeBody_in{ball=6} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p110: ServeWide_in{ball=6} -> Ply1_BackHandR
			p111: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p112: Serve_err{ball=13} -> Ad_Ply2Serve_2nd}; 

Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
			p113: ServeT_in{ball=5} -> Ply1_ForeHandR
			p114: ServeBody_in{ball=6} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p115: ServeWide_in{ball=6} -> Ply1_BackHandR
			p116: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p117: Serve_err{ball=13} -> Ndoublefault{ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ply2_ForeHandR = ifa (turn == nd_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
		  pcase {
			p118: FH_CrossCourt_Shallow{ball=1} -> Ply1_de_stroke
			p119: FH_CrossCourt_Deep{ball=4} -> Ply1_de_stroke
			p120: FH_DownLine_Shallow{ball=3} -> Ply1_ad_stroke
			p121: FH_DownLine_Deep {ball=6} -> Ply1_ad_stroke
			p122: FH_DownMid_Shallow{ball=2} -> Ply1_mid_stroke
			p123: FH_DownMid_Deep{ball=5} -> Ply1_mid_stroke
			p124: FH_Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p125: FH_Error{ ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else { // Player2 forehand return to Player1 serve from the ad court
      		pcase {
      p126: FH_InsideOut_Shallow{ball=3} -> Ply1_ad_stroke
      p127: FH_InsideOut_Deep{ball=6} -> Ply1_ad_stroke
			p128: FH_InsideIn_Shallow{ball=1} -> Ply1_de_stroke
			p129: FH_InsideIn_Deep{ball=4} -> Ply1_de_stroke
			p130: FH_CrossCourt_Shallow{ball=1} -> Ply1_de_stroke
			p131: FH_CrossCourt_Deep{ball=4} -> Ply1_de_stroke
			p132: FH_DownMid_Shallow{ ball=2} -> Ply1_mid_stroke
			p133: FH_DownMid_Deep{ ball=5} -> Ply1_mid_stroke
			p134: FH_Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p135: FH_Error{ ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};
      		 
Ply2_BackHandR = ifa (turn == nd_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
			pcase {
			p136: BH_CrossCourt_Shallow{ball=3} -> Ply1_ad_stroke
			p137: BH_CrossCourt_Deep{ball=6} -> Ply1_ad_stroke
			p138: BH_InsideIn_Shallow{ball=3} -> Ply1_ad_stroke
			p139: BH_InsideIn_Deep{ball=6} -> Ply1_ad_stroke
			p140: BH_InsideOut_Shallow{ball=1} -> Ply1_de_stroke
			p141: BH_InsideOut_Deep{ball=4} -> Ply1_de_stroke
			p142: BH_DownMid_Shallow{ ball=2} -> Ply1_mid_stroke
			p143: BH_DownMid_Deep{ ball=5} -> Ply1_mid_stroke
			p144: BH_Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p145: BH_Error{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p146: BH_CrossCourt_Shallow{ball=3} -> Ply1_ad_stroke
			p147: BH_CrossCourt_Deep{ball=6} -> Ply1_ad_stroke
			p148: BH_DownLine_Shallow{ball=1} -> Ply1_de_stroke
			p149: BH_DownLine_Deep{ball=4} -> Ply1_de_stroke
			p150: BH_DownMid_Shallow{ball=2} -> Ply1_mid_stroke
			p151: BH_DownMid_Deep{ball=5} -> Ply1_mid_stroke
			p152: BH_Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p153: BH_Error{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt			
      		 }};

// deuce stroke is when player2 hit position is 12
Ply2_de_stroke = pcase { // if already 
			p154: FH_Crosscourt_Shallow {ball=1} -> Ply1_de_stroke
			p155: FH_Crosscourt_Deep {ball=4} -> Ply1_de_stroke
			p156: FH_Downline_Shallow {ball=3} -> Ply1_ad_stroke
			p157: FH_Downline_Deep {ball=6} -> Ply1_ad_stroke
			p158: FH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p159: FH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p160: BH_InsideIn_Shallow {ball=3} -> Ply1_ad_stroke
			p161: BH_InsideIn_Deep {ball=6} -> Ply1_ad_stroke
			p162: BH_InsideOut_Shallow {ball=1} -> Ply1_de_stroke
			p163: BH_InsideOut_Deep {ball=4} -> Ply1_de_stroke
			p164: BH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p165: BH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p166: Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p167: Error {ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid stroke is when player2 hit position is 11
Ply2_mid_stroke = noMove -> pcase{
			p168: FH_InsideOut_Shallow {ball=3} -> Ply1_ad_stroke
			p169: FH_InsideOut_Deep {ball=6} -> Ply1_ad_stroke
			p170: FH_Crosscourt_Shallow{ball=1} -> Ply1_de_stroke
			p171: FH_Crosscourt_Deep{ball=4} -> Ply1_de_stroke
			p172: FH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p173: FH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p174: BH_InsideOut_Shallow {ball=1} -> Ply1_de_stroke
			p175: BH_InsideOut_Deep {ball=4} -> Ply1_de_stroke
			p176: BH_Crosscourt_Shallow {ball=3} -> Ply1_ad_stroke
			p177: BH_Crosscourt_Deep {ball=6} -> Ply1_ad_stroke
			p178: BH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p179: BH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p180: Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p181: Error {ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad stroke is when player 2 hit position is 10
Ply2_ad_stroke = pcase{
			p182: FH_InsideOut_Shallow {ball=3} -> Ply1_ad_stroke
			p183: FH_InsideOut_Deep {ball=6} -> Ply1_ad_stroke
			p184: FH_InsideIn_Shallow {ball=1} -> Ply1_de_stroke
			p185: FH_InsideIn_Deep {ball=4} -> Ply1_de_stroke
			p186: FH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p187: FH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p188: BH_Crosscourt_Shallow {ball=3} -> Ply1_ad_stroke
			p189: BH_Crosscourt_Deep {ball=6} -> Ply1_ad_stroke
			p190: BH_Downline_Shallow {ball=1} -> Ply1_de_stroke
			p191: BH_Downline_Deep {ball=4} -> Ply1_de_stroke
			p192: BH_DownMid_Shallow {ball=2} -> Ply1_mid_stroke
			p193: BH_DownMid_Deep {ball=5} -> Ply1_mid_stroke
			p194: Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p195: Error {ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};    		             

#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;