TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{nd_de_ct,dm_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == nd_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == dm_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);

// player 1 serving from 1, will always serve to 8 or 9
De_Ply1Serve = pcase {                             
			p0: ServeT_in{ball=8} -> Ply2_ForeHandR  
			p1: ServeBody_in{ball=9} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p2: ServeWide_in{ball=9} -> Ply2_BackHandR 
			p3: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p4: Serve_err{ball=13} -> De_Ply1Serve_2nd}; 

De_Ply1Serve_2nd = pcase {                 //1st serve is out
			p5: ServeT_in{ball=8} -> Ply2_ForeHandR  
			p6: ServeBody_in{ball=9} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p7: ServeWide_in{ball=9} -> Ply2_BackHandR 
			p8: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p9: Serve_err{ball=13} -> Fdoublefault{dmscore++; if (dmscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };

// player 1 serving from 3, will always serve to 7 or 8
Ad_Ply1Serve = pcase {
			p10: ServeT_in{ball=8} -> Ply2_BackHandR  
			p11: ServeBody_in{ball=7} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p12: ServeWide_in{ball=7} -> Ply2_ForeHandR
			p13: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p14: Serve_err{ball=13} -> Ad_Ply1Serve_2nd}; 

Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
			p15: ServeT_in{ball=8} -> Ply2_BackHandR  
			p16: ServeBody_in{ball=7} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p17: ServeWide_in{ball=7} -> Ply2_ForeHandR
			p18: Serve_winner{ball=13} -> FWinner{ndscore++; if (ndscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p19: Serve_err{ball=13} -> Fdoublefault{dmscore++; if (dmscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };    
     		 
Ply1_ForeHandR = ifa (turn == dm_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
		 pcase {
			p20: FH_CrossCourt{ball=9} -> Ply2_de_stroke
      p21: FH_CrossCourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p21: FH_DownLine{ball=7} -> Ply2_ad_stroke
      p23: FH_DownLine_Deep{ball=10} -> Ply2_deep_ad_stroke
			p22: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p22: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p23: FH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p24: FH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p25: FH_InsideOut{ball=7} -> Ply2_ad_stroke
			p25: FH_InsideOut_Deep{ball=10} -> Ply2_deep_ad_stroke
			p26: FH_InsideIn{ball=9} -> Ply2_de_stroke
			p26: FH_InsideIn_Deep{ball=12} -> Ply2_deep_de_stroke
			p27: FH_CrossCourt{ball=9} -> Ply2__de_stroke
			p27: FH_CrossCourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p28: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p28: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p29: FH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p30: FH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

Ply1_BackHandR = ifa (turn == dm_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		 pcase {
			p31: BH_CrossCourt{ball=7} -> Ply2_ad_stroke
			p31: BH_CrossCourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p32: BH_InsideIn{ball=7} -> Ply2_ad_stroke
			p32: BH_InsideIn_Deep{ball=10} -> Ply2_deep_ad_stroke
			p33: BH_InsideOut{ball=9} -> Ply2_de_stroke
			p33: BH_InsideOut_Deep{ball=12} -> Ply2_deep_de_stroke
			p34: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p34: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p35: BH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p36: BH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p31: BH_CrossCourt{ball=7} -> Ply2_ad_stroke
			p31: BH_CrossCourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p38: BH_DownLine{ball=9} -> Ply2_de_stroke
			p38: BH_DownLine_Deep{ball=12} -> Ply2_deep_de_stroke
			p39: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p39: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p40: BH_Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p41: BH_Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

// player 1, deuce, court 4
// player 1 is hitting the ball from deuce court
Ply1_de_stroke = pcase{
			p56: FH_Crosscourt{ball=9} -> Ply2_de_stroke
			p57: FH_Crosscourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p58: FH_Downline{ball=7} -> Ply2_ad_stroke
			p59: FH_Downline_Deep{ball=10} -> Ply2_deep_ad_stroke
			p60: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p61: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p62: BH_InsideIn{ball=7} -> Ply2_ad_stroke
			p63: BH_InsideIn_Deep{ball=10} -> Ply2_deep_ad_stroke
			p64: BH_InsideOut{ball=9} -> Ply2_de_stroke
			p65: BH_InsideOut_Deep{ball=12} -> Ply2_deep_de_stroke
			p66: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p67: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p68: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p69: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};

// player 1, deuce deep, court 1
// player 1 is hitting the ball from deep in deuce court
Ply1_deep_de_stroke = pcase{
			p70: FH_Crosscourt{ball=9} -> Ply2_de_stroke
			p71: FH_Crosscourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p72: FH_Downline{ball=7} -> Ply2_ad_stroke
			p73: FH_Downline_Deep{ball=10} -> Ply2_deep_ad_stroke
			p74: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p75: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p76: BH_InsideIn{ball=7} -> Ply2_ad_stroke
			p77: BH_InsideIn_Deep{ball=10} -> Ply2_deep_ad_stroke
			p78: BH_InsideOut{ball=9} -> Ply2_de_stroke
			p79: BH_InsideOut_Deep{ball=12} -> Ply2_deep_de_stroke
			p80: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p81: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p82: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p83: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};
	// player 1, mid, court 5
// player 1 is hitting the ball from mid court
Ply1_mid_stroke = pcase{
			p84: FH_InsideOut{ball=7} -> Ply2_ad_stroke
			p85: FH_InsideOut_Deep{ball=10} -> Ply2_deep_ad_stroke
			p86: FH_Crosscourt{ball=9} -> Ply2_de_stroke
			p87: FH_Crosscourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p88: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p89: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p90: BH_InsideOut{ball=9} -> Ply2_de_stroke
			p91: BH_InsideOut_Deep{ball=12} -> Ply2_deep_de_stroke
			p92: BH_Crosscourt{ball=7} -> Ply2_ad_stroke
			p93: BH_Crosscourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p94: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p95: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p96: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p97: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};

  
// player 1, mid deep, court 2
// player 1 is hitting the ball from deep in mid court
Ply1_deep_mid_stroke = pcase{
			p98: FH_InsideOut{ball=7} -> Ply2_ad_stroke
			p99: FH_InsideOut_Deep{ball=10} -> Ply2_deep_ad_stroke
			p100: FH_Crosscourt{ball=9} -> Ply2_de_stroke
			p101: FH_Crosscourt_Deep{ball=12} -> Ply2_deep_de_stroke
			p102: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p103: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p104: BH_InsideOut{ball=9} -> Ply2_de_stroke
			p105: BH_InsideOut_Deep{ball=12} -> Ply2_deep_de_stroke
			p106: BH_Crosscourt{ball=7} -> Ply2_ad_stroke
			p107: BH_Crosscourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p108: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p109: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p110: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p111: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};

	

// player 1, ad, court 6
// player 1 is hitting the ball from ad court
Ply1_ad_stroke = pcase{
			p112: FH_InsideOut{ball=7} -> Ply2_ad_stroke
			p113: FH_InsideOut_Deep{ball=10} -> Ply2_deep_ad_stroke
			p114: FH_InsideIn{ball=9} -> Ply2_de_stroke
			p115: FH_InsideIn_Deep{ball=12} -> Ply2_deep_de_stroke
			p116: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p117: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p118: BH_Crosscourt{ball=7} -> Ply2_ad_stroke
			p119: BH_Crosscourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p120: BH_Downline{ball=9} -> Ply2_de_stroke
			p121: BH_Downline_Deep{ball=12} -> Ply2_deep_de_stroke
			p122: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p123: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p124: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p125: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};

// player 1, ad deep, court 3
// player 1 is hitting the ball from deep in ad court
Ply1_deep_ad_stroke = pcase{
			p126: FH_InsideOut{ball=7} -> Ply2_ad_stroke
			p127: FH_InsideOut_Deep{ball=10} -> Ply2_deep_ad_stroke
			p128: FH_InsideIn{ball=9} -> Ply2_de_stroke
			p129: FH_InsideIn_Deep{ball=12} -> Ply2_deep_de_stroke
			p130: FH_DownMid{ball=8} -> Ply2_mid_stroke
			p131: FH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p132: BH_Crosscourt{ball=7} -> Ply2_ad_stroke
			p133: BH_Crosscourt_Deep{ball=10} -> Ply2_deep_ad_stroke
			p134: BH_Downline{ball=9} -> Ply2_de_stroke
			p135: BH_Downline_Deep{ball=12} -> Ply2_deep_de_stroke
			p136: BH_DownMid{ball=8} -> Ply2_mid_stroke
			p137: BH_DownMid_Deep{ball=11} -> Ply2_deep_mid_stroke
			p138: Winner{ball=13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p139: Error{ball=13} -> {dmscore++; if (dmscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};

De_Ply2Serve = pcase {
			p66 : ServeT_in{ball=5} -> Ply1_BackHandR
			p67: ServeBody_in{ball=4} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p68: ServeWide_in{ball=4} -> Ply1_ForeHandR
			p69: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p70: Serve_err{ball=13} -> De_Ply2Serve_2nd}; 

De_Ply2Serve_2nd = pcase {                 //1st serve is out
			p71: ServeT_in{ball=5} -> Ply1_BackHandR
			p72: ServeBody_in{ball=4} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p73: ServeWide_in{ball=4} -> Ply1_ForeHandR
			p74: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p75: Serve_err{ball=13} -> Ndoublefault{ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ad_Ply2Serve = pcase {
			p76: ServeT_in{ball=5} -> Ply1_ForeHandR
			p77: ServeBody_in{ball=6} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p78: ServeWide_in{ball=6} -> Ply1_BackHandR
			p79: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p80: Serve_err{ball=13} -> Ad_Ply2Serve_2nd}; 

Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
			p81: ServeT_in{ball=5} -> Ply1_ForeHandR
			p82: ServeBody_in{ball=6} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p83: ServeWide_in{ball=6} -> Ply1_BackHandR
			p84: Serve_Winner{ball=13} -> NWinner{dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p85: Serve_err{ball=13} -> Ndoublefault{ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ply2_ForeHandR = ifa (turn == nd_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		  pcase {
			p86: FH_InsideOut{ball = 4} -> Ply1_de_stroke
			p86: FH_InsideOut_Deep{ball = 1} -> Ply1_deep_de_stroke
			p87: FH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p87: FH_InsideIn_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p88: FH_CrossCourt{ball = 3} -> Ply1_ad_stroke
			p88: FH_CrossCourt_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p89: FH_DownMid{ball = 2} -> Ply1_mid_stroke
			p89: FH_DownMid_Deep{ball = 5} -> Ply1_deep_mid_stroke
			p90: FH_Winner{ball=13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p91: FH_Error{ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
      p92: FH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
      p92: FH_CrossCourt_Deep{ ball = 6} -> Ply1_deep_ad_stroke
			p93: FH_DownLine{ball = 1} -> Ply1_de_stroke
			p93: FH_DownLine_Deep{ball = 4} -> Ply1_deep_de_stroke
			p94: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p94: FH_DownMid_Deep{ ball = 5} -> Ply1_deep_mid_stroke
			p95: FH_Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p96: FH_Error{ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};
      		 
Ply2_BackHandR = ifa (turn == nd_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
			pcase {
			p97: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p97: BH_CrossCourt_Deep{ball = 4} -> Ply1_deep_de_stroke
			p98: BH_DownLine{ball = 3} -> Ply1_ad_stroke
			p98: BH_DownLine_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p99: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p99: BH_DownMid_Deep{ball = 5} -> Ply1_deep_mid_stroke
			p100: BH_Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                      else { turn = (turn+1)%4} }-> NextPt
			p101: BH_Error{ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p102: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p102: BH_CrossCourt_Deep{ball = 4} -> Ply1_deep_de_stroke
			p103: BH_InsideIn{ball = 1} -> Ply1_de_stroke
			p103: BH_InsideIn_Deep{ball = 4} -> Ply1_deep_de_stroke
			p104: BH_InsideOut{ball = 3} -> Ply1_ad_stroke
			p104: BH_InsideOut_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p105: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p105: BH_DownMid_Deep{ball = 5} -> Ply1_deep_mid_stroke
			p106: BH_Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p107: BH_Error{ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt			
      		 }};

// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase { // if already 
			p108: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p108: FH_InsideOut_Deep{ball = 4} -> Ply1_deep_de_stroke
			p109: FH_insideIn {ball = 3} -> Ply1_ad_stroke
			p109: FH_insideIn_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p110: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p110: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p111: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p111: BH_Crosscourt_Deep {ball = 4} -> Ply1_deep_de_stroke
			p112: BH_Downline {ball = 3} -> Ply1_ad_stroke
			p112: BH_Downline_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p113: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p113: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p114: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p115: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

Ply2_deep_de_stroke = pcase { // if already 
			p108: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p108: FH_InsideOut_Deep{ball = 4} -> Ply1_deep_de_stroke
			p109: FH_insideIn {ball = 3} -> Ply1_ad_stroke
			p109: FH_insideIn_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p110: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p110: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p111: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p111: BH_Crosscourt_Deep {ball = 4} -> Ply1_deep_de_stroke
			p112: BH_Downline {ball = 3} -> Ply1_ad_stroke
			p112: BH_Downline_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p113: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p113: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p114: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p115: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
			p116: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p116: FH_InsideOut_Deep {ball = 4} -> Ply1_deep_de_stroke
			p117: FH_Crosscourt{ball = 3} -> Ply1_ad_stroke
			p117: FH_Crosscourt_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p118: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p118: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p119: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p119: BH_InsideOut_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p120: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p120: BH_Crosscourt_Deep {ball = 4} -> Ply1_deep_de_stroke
			p121: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p121: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p122: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p123: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

Ply2_deep_mid_stroke = noMove -> pcase{
			p116: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p116: FH_InsideOut_Deep {ball = 4} -> Ply1_deep_de_stroke
			p117: FH_Crosscourt{ball = 3} -> Ply1_ad_stroke
			p117: FH_Crosscourt_Deep{ball = 6} -> Ply1_deep_ad_stroke
			p118: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p118: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p119: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p119: BH_InsideOut_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p120: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p120: BH_Crosscourt_Deep {ball = 4} -> Ply1_deep_de_stroke
			p121: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p121: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p122: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p123: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
			p124: FH_Crosscourt {ball = 3} -> Ply1_ad_stroke
			p124: FH_Crosscourt_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p125: FH_Downline {ball = 1} -> Ply1_de_stroke
			p125: FH_Downline_Deep {ball = 4} -> Ply1_deep_de_stroke
			p126: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p126: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p127: BH_InsideIn {ball = 1} -> Ply1_de_stroke
			p127: BH_InsideIn_Deep {ball = 4} -> Ply1_deep_de_stroke
			p128: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p128: BH_InsideOut_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p129: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p129: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p130: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p131: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};    		             


Ply2_deep_ad_stroke = pcase{
			p124: FH_Crosscourt {ball = 3} -> Ply1_ad_stroke
			p124: FH_Crosscourt_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p125: FH_Downline {ball = 1} -> Ply1_de_stroke
			p125: FH_Downline_Deep {ball = 4} -> Ply1_deep_de_stroke
			p126: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p126: FH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p127: BH_InsideIn {ball = 1} -> Ply1_de_stroke
			p127: BH_InsideIn_Deep {ball = 4} -> Ply1_deep_de_stroke
			p128: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p128: BH_InsideOut_Deep {ball = 6} -> Ply1_deep_ad_stroke
			p129: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p129: BH_DownMid_Deep {ball = 5} -> Ply1_deep_mid_stroke
			p130: Winner{ball = 13} -> {dmscore++; if (dmscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p131: Error {ball = 13} -> {ndscore++; if (ndscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};    		             

#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;